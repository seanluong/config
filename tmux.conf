# tmux ls or tmux list-sessions
# tmux new -s <session-name>
# tmux attach-session -t <session-name>
# Prefix d to detach session


set -g escape-time 1
set -g base-index 1     # base-1 window index
setw -g pane-base-index 1   # base-1 pane index


bind r source-file ~/.tmux.conf \; display 'Reloaded'

bind | split-window -h      # split horizontally
bind - split-window -v      # split vertically

# pane movement keys a la Vim
bind -r h select-pane -L
bind -r j  select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# resize pane with Vim-like movement keys
# -r: repeatable
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# mouse setting, may affect interaction with buffer/clipboard
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on


# set screen color
set -g default-terminal "screen-256color"

## set foreground and background of status bar
set -g status-fg white
set -g status-bg black

## set colors for window list
set -g window-status-style fg=cyan
set -g window-status-style bg=default
set -g window-status-style dim

set -g window-status-current-style fg=white
set -g window-status-current-style bg=red
set -g window-status-current-style bright

## set colors for pane borders
set -g pane-border-style fg=green
set -g pane-border-style bg=default
set -g pane-active-border-style fg=white
set -g pane-active-border-style bg=white

## set colors for command line
set -g message-style fg=white
set -g message-style bg=black
set -g message-style bright

## set colors for the status bar
set -g status-left-length 40
set -g status-left "#[fg=green]session: #S window: #[fg=yellow]#I pane: #[fg=cyan]#P"
set -g status-left-style bright

set -g status-right "#[fg=pink]#H #[fg=cyan]%d %b %R"
set -g status-right-style bright

set -g status-justify centre

# set -g status-utf8 on
set -g status-interval 60

## notify when something happens on another window
setw -g monitor-activity on
set -g visual-activity on

## Prefix [ to enter Copy mode and browse the buffer up down left right
## Enter to exit Copy mode
## use h j k l to browse the buffer and other Vim movement keys (w, b, f, etc.)
## g to top of buffer, G to bottom
## Ctrl-b page up, Ctrl-f page down, or Pg Up/Pg Dn
set -g mode-keys vi

## seaching like less
## ? search upward, / downward
## n to next occurrence, N to previous


## Copy & paste
## 1. Enter Copy mode - Prefix [
## 2. Press Space to start selecting
## 3. Press Enter to stop selecting
## 4. Prefix ] to paste

## Capture pane to paste buffer
## 1. Enter Command mode - Prefix :
## 2. Type capture-pane

## Show buffer: enter Command mode and type show-buffer
## Save buffer to a file: enter Command mode and type save-buffer <filename>
## e.g. tmux capture-pane && tmux save-buffer buffer.txt
## or capture-pane; save-pane buffer.txt in Command mode

## Buffer stacks
## list-buffers to show all buffers
## choose-buffer, use with nano???

## Remapping Copy & Paste with Vim keys
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

## Integrate with xclip to use Prefix Ctrl-C and Prefix Ctrl-V


# paste from system clipboard to tmux
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# move tmux copy buffer to xclip
# bind C-y run "tmux save-buffer - | xclip -i > /dev/null"

## tips on workflow
# Prefix ! to create a new window from a pane
# equivalent to Command mode then break-pane

# Join panes
# 1. in a new session:      tmux new-session -s mysession -n first -d
# 2. create a new window:   tmux new-window -t mysession -n second
# 3. attach 'mysession' (open): tmux attach -t mysession
# 4. join pane: Command mode    join-pane -s <session name>:<window id>.<pane id> [-t <target window>]
